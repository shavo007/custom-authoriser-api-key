service: custom-authoriser-api-key


plugins:
  - serverless-webpack # Use serverless-webpack plugin to transpile ES6/ES7
  - serverless-offline
  - serverless-domain-manager
  - serverless-plugin-aws-alerts

custom:
  customDomain:
      domainName: shane.shanelee.xyz
      certificateName: '*.shanelee.xyz'
      basePath: ''
      stage: ${self:provider.stage}
      createRoute53Record: true
      endpointType: 'regional'
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    packager: 'yarn'
    package:
        individually: true #Webpack compiles and optimizes each function individually,
        # removing unnecessary imports and reducing code sizes significantly

  alerts:
    stages:
      - dev
    topics:
      alarm:
        topic: ${self:service}-${opt:stage}-alerts-alarm
        notifications:
          - protocol: email
            endpoint: xxx@gmail.com # Change this to your email address
    definitions:  # these defaults are merged with your definitions
      # functionErrors:
        # period: 300 # override period
      customAlarm:
        description: 'My custom alarm'
        namespace: 'AWS/Lambda'
        metric: exceptions
        threshold: 0
        statistic: Minimum
        period: 60
        evaluationPeriods: 1
        comparisonOperator: GreaterThanThreshold
        pattern: 'exception Bar'
    alarms:
      - functionErrors
      - functionThrottles
      - customAlarm

provider:
  name: aws
  runtime: nodejs8.10
  apiKeys:
      - ${opt:stage}-key
  usagePlan:
    quota:
      limit: 5000
      offset: 2
      period: MONTH
    throttle:
      burstLimit: 200
      rateLimit: 100

# you can overwrite defaults here
#  stage: dev
# region: ap-southeast-2


functions:
  hello:
    handler: src/hello.default
    events:
          - http:
              path: hello
              method: get
              # cors: true
              private: true
              authorizer:
                name: authorizerFunc
                resultTtlInSeconds: 0
                # identitySource: method.request.header.Authorization
                # identityValidationExpression: someRegex
                type: request
  authorizerFunc:
    handler: src/authoriser.default

  app:
    handler: src/index.handler
    events:
          - http: ANY /
          - http: 'ANY {proxy+}'
